name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cyan-science/journal-mcp
  CLOUD_RUN_SERVICE: cyan-science-journal
  CLOUD_RUN_REGION: us-central1

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test --if-present

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-convex:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to Convex Production
      run: |
        npx convex deploy --prod
      env:
        CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}

  deploy-cloud-run:
    needs: [build-and-push, deploy-convex]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.CLOUD_RUN_SERVICE }} \
          --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          --region ${{ env.CLOUD_RUN_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="VITE_CONVEX_URL=${{ secrets.CONVEX_PROD_URL }}" \
          --port 3000 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10
    
    - name: Get Cloud Run URL
      id: deploy
      run: |
        URL=$(gcloud run services describe ${{ env.CLOUD_RUN_SERVICE }} \
          --region ${{ env.CLOUD_RUN_REGION }} \
          --format 'value(status.url)')
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Cloud Run URL: $URL"
    
    outputs:
      cloud-run-url: ${{ steps.deploy.outputs.url }}

  output-urls:
    needs: deploy-cloud-run
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Output Deployment URLs
      run: |
        echo "ðŸš€ Deployment Complete!"
        echo "Cloud Run URL: ${{ needs.deploy-cloud-run.outputs.cloud-run-url }}"
        echo "Convex Production URL: ${{ secrets.CONVEX_PROD_URL }}"
        echo "Container Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
